<?xml version="1.0" encoding="utf-8"?><!--
     Copyright (C) 2016 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  - This file contains all of the strings used throughout Sunshine. They can be accessed       -
  - through calls to Context#getString. This strings are organized by where they are used in   -
  - Sunshine.                                                                                  -
  -                                                                                            -
  - Throughout this file, you will see <xliff:g> tags. These help any potential translators    -
  - properly translate your strings and also give developers that are looking at your strings  -
  - an idea of exactly how they are used.                                                      -
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<resources xmlns:xliff="http://schemas.android.com/apk/res-auto">


    <!-- - - - - - - - - - - - - -
      - Used throughout Sunshine -
      - - - - - - - - - - - - - -->

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      - Used in Action Bar and in AndroidManifest to tell the device the name of this app. It's  -
      - good practice to keep this short, so if your app's name was "The Greatest Weather App    -
      - In the History of Mankind", your launcher icon isn't displayed with "The greatest Wea"   -
      - or something similar.                                                                    -
      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <string name="app_name">Food Tracker</string>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      - By convention, "action" denotes that this String will be used as the label for an        -
      - Action, typically from the action bar.  The ActionBar is limited real estate, so         -
      - shorter is better.                                                                       -
      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <string name="action_map">Map Location</string>
    <!-- Used to share the weather forecast on a given day from the DetailActivity -->
    <string name="action_share">Share</string>

    <!-- Used to open Settings Menu from MainActivity and DetailActivity -->
    <string name="action_settings">Settings</string>

    <!--Used in overflow menu to refresh weather data-->
    <string name="action_refresh">Refresh</string>

    <!-- Title of the DetailActivity -->
    <string name="title_activity_detail">Details</string>
    <!-- Title of the SettingsActivity -->
    <string name="title_activity_settings">Settings</string>

    <string name="error_message">
        An error has occurred. Please try again by clicking REFRESH
    </string>

    <string name="content_authority">com.example.android.sunshine</string>


    <!-- - - - - - - - - - - - - - - -
      - Used by SunshinePreferences  -
      - - - - - - - - - - - - - - - -->

    <!-- Label for the location preference -->
    <string name="pref_location_label">Location</string>


    <!-- Key name for storing location in SharedPreferences -->
    <string name="pref_location_key" translatable="false">location</string>

    <!-- Default postal code for location preference -->
    <string name="pref_location_default" translatable="false">Mountain View, CA 94043</string>

    <!-- Label for the temperature units preference -->
    <string name="pref_units_label">Temperature Units</string>

    <!-- Label for metric option in temperature unit preference -->
    <string name="pref_units_label_metric">Metric</string>

    <!-- Label for imperial option in temperature unit preference -->
    <string name="pref_units_label_imperial">Imperial</string>

    <!-- Key name for temperature unit preference in SharedPreferences -->
    <string name="pref_units_key" translatable="false">units</string>

    <!-- Value in SharedPreferences for metric temperature unit option -->
    <string name="pref_units_metric" translatable="false">metric</string>

    <!-- Value in SharedPreferences for imperial temperature unit option -->
    <string name="pref_units_imperial" translatable="false">imperial</string>

    <!-- Strings related to Notification Enabled preference -->
    <string name="pref_enable_notifications_key" translatable="false">enable_notifications</string>
    <string name="pref_enable_notifications_label">Weather Notifications</string>

    <string name="pref_enable_notifications_true">Enabled</string>
    <string name="pref_enable_notifications_false">Not Enabled</string>

    <string name="pref_last_notification">last_notification</string>


    <!-- - - - - - - - - - - - - - -
      - Used by CustomDateUtils  -
      - - - - - - - - - - - - - - -->

    <!-- For labelling today's forecast -->
    <string name="today">Today</string>

    <!-- For labelling tomorrow's forecast -->
    <string name="tomorrow">Tomorrow</string>

    <!-- Date format -->
    <string name="format_full_friendly_date">
        <xliff:g id="month">%1$s</xliff:g>, <xliff:g id="day">%2$s</xliff:g>
    </string>


    <!-- - - - - - - - - - - - - - - - -
      - Used by SunshineWeatherUtils   -
      - - - - - - - - - - - - - - - - -->

    <!-- Temperature format -->
    <string name="format_temperature">
        <xliff:g id="temp">%1.0f</xliff:g>\u00B0
    </string>

    <string name="wind_label">Wind</string>
    <!-- Wind in kph -->
    <string name="format_wind_kmh">
        <xliff:g id="speed">%1$1.0f</xliff:g> km/h
        <xliff:g id="direction">%2$s</xliff:g>
    </string>

    <!-- Wind in mph -->
    <string name="format_wind_mph">
        <xliff:g id="speed">%1$1.0f</xliff:g> mph
        <xliff:g id="direction">%2$s</xliff:g>
    </string>

    <string name="pressure_label">Pressure</string>
    <!-- Pressure format -->
    <string name="format_pressure">
        <xliff:g id="pressure">%1.0f</xliff:g> hPa
    </string>

    <string name="humidity_label">Humidity</string>
    <!-- Humidity format -->
    <string name="format_humidity">
        <xliff:g id="humidity">%1.0f</xliff:g> %%
    </string>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      - Used for Accessibility purposes (Accessibility == a11y)                            -
      -                                                                                    -
      - Fun Fact: Accessibility is abbreviated a11y because accessibility starts with 'a', -
      - followed by 11 letters, and then a 'y'. It is pronounced alley, like an alley cat. -
      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <string name="a11y_forecast">Forecast: <xliff:g id="condition">%1$s</xliff:g></string>
    <string name="a11y_forecast_icon">Forecast icon: <xliff:g id="condition">%1$s</xliff:g></string>
    <string name="a11y_high_temp">High: <xliff:g id="high">%1$s</xliff:g></string>
    <string name="a11y_low_temp">Low: <xliff:g id="low">%1$s</xliff:g></string>
    <string name="a11y_humidity">Humidity: <xliff:g id="humidity">%1$s</xliff:g></string>
    <string name="a11y_pressure">Barometric Pressure: <xliff:g id="pressure">%1$s</xliff:g></string>
    <string name="a11y_wind">Wind speed and direction: <xliff:g id="wind">%1$s</xliff:g></string>


    <!-- Used by NotificationUtils -->

    <!-- The format of the notification we show when the weather is updated -->
    <string name="format_notification">
        Forecast:<xliff:g id="condition">%1$s</xliff:g> -
        High:<xliff:g id="high">%2$s</xliff:g>
        Low:<xliff:g id="low">%3$s</xliff:g>
    </string>
    <string name="title_activity_temp">TempActivity</string>
    <string name="title_activity_main2">MainActivity2</string>
    <string name="title_home">Home</string>
    <string name="title_dashboard">Dashboard</string>
    <string name="title_notifications">Notifications</string>
    <string name="title_activity_scrolling">ScrollingActivity</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>

</resources>